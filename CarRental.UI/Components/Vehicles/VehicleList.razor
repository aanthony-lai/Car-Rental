@foreach (var vechicle in Vechicles)
{
	<tr>
		<td><strong>@vechicle.RegNumber</strong></td>
		<td>@vechicle.Brand</td>
		<td>@vechicle.Odometer</td>
		<td>@vechicle.CostPerKm</td>
		<td>@vechicle.Type</td>
		<td>@vechicle.CostPerDay</td>
		<td>
			<VehicleBookingAction 
				RentInProgress="@RentInProgress" 
				IsRented="@(vechicle.Status == VehicleStatus.Booked)"
				Customers="Customers"
				RentCarEvent="@((socialSecurityNumber) => RentCarHandler(vechicle.RegNumber, socialSecurityNumber))"/>
		</td>
		<td>
			<button
				disabled=@true
				class="@(vechicle.Status == VehicleStatus.Available ? "btn btn-dark" : "btn btn-danger")">
				@vechicle.Status
			</button>
		</td>
	</tr>
}

@code {
	[Parameter] 
    public List<Vehicle> Vechicles { get; set; } = [];

	[Parameter]
	public List<Customer> Customers { get; set; } = [];

	[Parameter]
	public bool RentInProgress { get; set; }

	[Parameter]
	public EventCallback<AddBookingModel> RentCarEventCallback { get; set; }
	

	private async Task RentCarHandler(string regNumber, int socialSecurityNumber) 
	{
		await RentCarEventCallback.InvokeAsync(new AddBookingModel(regNumber, socialSecurityNumber));
	}
}
