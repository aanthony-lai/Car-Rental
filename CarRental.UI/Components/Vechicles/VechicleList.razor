<tr>
	<td><strong>@Vechicle.RegNumber</strong></td>
	<td>@Vechicle.Brand</td>
	<td>@Vechicle.Odometer</td>
	<td>@Vechicle.CostPerKm</td>
	<td>@Vechicle.Type</td>
	<td>@Vechicle.CostPerDay</td>
	<td>
		@Vechicle.Status == @VechicleStatus.Available
		? <VechicleBookingAction 
		RentInProgress="@RentInProgress" 
		Customers="Customers"
		CustomerChangeEvent="CustomerChangeHandler" 
		RentCarEvent="RentCarHandler"/>
		: <VechicleReturnAction RentInProgress="@RentInProgress" />
	</td>
	<td>
		<button disabled="@true" class="@(Vechicle.Status == VechicleStatus.Available ? "btn btn-dark" : "btn btn-danger")">@Vechicle.Status</button>
	</td>
</tr>

@code {
	[Parameter]
	public IVechicle Vechicle { get; set; } = null!;

	[Parameter]
	public List<Customer> Customers { get; set; } = new();

	[Parameter]
	public bool RentInProgress { get; set; }

	[Parameter]
	public EventCallback<int> CustomerChangeEvent { get; set; }

	[Parameter]
	public EventCallback RentCarEvent { get; set; }


	private async void CustomerChangeHandler(int customerSocialSecurityNumber)
	{
		await CustomerChangeEvent.InvokeAsync(customerSocialSecurityNumber);
	} 

	private async void RentCarHandler() 
	{
		await RentCarEvent.InvokeAsync();
	}
}
